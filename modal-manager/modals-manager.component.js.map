{"version":3,"file":"modals-manager.component.js","sourceRoot":"","sources":["../../modal-manager/modals-manager.component.ts"],"names":[],"mappings":"AAAA,OAAO,EACH,SAAS,EAIZ,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,QAAQ,EAA+B,mBAAmB,EAAE,MAAM,4BAA4B,CAAC;AACxG,OAAO,EAAE,oBAAoB,EAAqB,MAAM,0BAA0B,CAAA;;IAS9E,gCAAoB,mBAAyC,EAAU,YAAsB;QAAzE,wBAAmB,GAAnB,mBAAmB,CAAsB;QAAU,iBAAY,GAAZ,YAAY,CAAU;KAC5F;IACD,yCAAQ,GAAR;QAAA,iBAaC;QAZG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,UAAC,KAAwB;YAC/F,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;gBACf,EAAE,CAAC,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;oBAChB,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,qCAAqC,CAAC,CAAC;iBAChE;gBACD,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACpB;YAAC,IAAI,CAAC,CAAC;gBACJ,EAAE,CAAC,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;oBAChB,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC;iBAC/C;aACJ;SACJ,CAAC,CAAC;KACN;IAGD,qCAAI,GAAJ,UAAK,KAAwB;QACzB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC;QAC7E,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,MAAM,GAAG,KAAK,CAAC,OAAO,IAAI,EAAE,CAAC;QAC7D,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,UAAC,MAAM;YAC7B,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACjB,MAAM,GAAG;oBACL,KAAK,EAAE,IAAI;oBACX,MAAM,EAAE,MAAM;iBACjB,CAAC;gBACF,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;aAC1B;SACJ,EAAE,UAAC,MAAM;YACN,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACjB,MAAM,GAAG;oBACL,KAAK,EAAE,KAAK;oBACZ,MAAM,EAAE,MAAM;iBACjB,CAAC;gBACF,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;aAC1B;SACJ,CAAC,CAAC;KACN;IAEO,iDAAgB,GAAxB,UAAyB,MAAW;QAChC,EAAE,CAAC,CAAC,MAAM,KAAK,mBAAmB,CAAC,GAAG,CAAC,CAAC,CAAC;YACrC,MAAM,CAAC,iBAAiB,CAAC;SAC5B;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,mBAAmB,CAAC,cAAc,CAAC,CAAC,CAAC;YACvD,MAAM,CAAC,2BAA2B,CAAC;SACtC;QAAC,IAAI,CAAC,CAAC;YACJ,MAAM,CAAC,WAAS,MAAQ,CAAC;SAC5B;KACJ;IAGD,4CAAW,GAAX;QACI,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;KACnC;;gBA5DJ,SAAS,SAAC;oBACP,QAAQ,EAAE,wCAAwC;oBAClD,QAAQ,EAAE,EAAE;iBACf;;;;gBALQ,oBAAoB;gBADpB,QAAQ;;iCANjB;;SAaa,sBAAsB","sourcesContent":["import {\n    Component,\n    Input,\n    OnInit,\n    OnDestroy\n} from '@angular/core';\nimport { NgbModal, NgbActiveModal, NgbModalRef, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { ModalsManagerService, ModalManagerState } from './modals-manager.service'\nimport { Subscription } from 'rxjs/Subscription';\n@Component({\n    selector: 'app-modal-manager, [app-modal-manager]',\n    template: ''\n})\nexport class ModalsManagerComponent implements OnInit, OnDestroy {\n    modalRef: NgbModalRef;\n    subscription: Subscription;\n    constructor(private modalManagerService: ModalsManagerService, private modalService: NgbModal) {\n    }\n    ngOnInit() {\n        this.subscription = this.modalManagerService.getModalListener().subscribe((state: ModalManagerState) => {\n            if (state.action) {\n                if (this.modalRef) {\n                    this.modalRef.dismiss('forcefully destroy by another modal');\n                }\n                this.open(state);\n            } else {\n                if (this.modalRef) {\n                    this.modalRef.dismiss('destroy forcefully');\n                }\n            }\n        });\n    }\n\n\n    open(state: ModalManagerState) {\n        this.modalRef = this.modalService.open(state.component, state.options || {});\n        this.modalRef.componentInstance.inputs = state.payload || {};\n        this.modalRef.result.then((result) => {\n            if (state.callback) {\n                result = {\n                    state: true,\n                    result: result\n                };\n                state.callback(result);\n            }\n        }, (reason) => {\n            if (state.callback) {\n                reason = {\n                    state: false,\n                    result: reason\n                };\n                state.callback(reason);\n            }\n        });\n    }\n\n    private getDismissReason(reason: any): string {\n        if (reason === ModalDismissReasons.ESC) {\n            return 'by pressing ESC';\n        } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n            return 'by clicking on a backdrop';\n        } else {\n            return `with: ${reason}`;\n        }\n    }\n\n\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n}\n"]}