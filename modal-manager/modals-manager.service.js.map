{"version":3,"file":"modals-manager.service.js","sourceRoot":"","sources":["../../modal-manager/modals-manager.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,eAAe,EAAE,MAAM,sBAAsB,CAAC;;IAMnD;QACI,IAAI,CAAC,KAAK,GAAG;YACT,MAAM,EAAE,KAAK;YACb,SAAS,EAAE,IAAI;SAClB,CAAC;QACF,IAAI,CAAC,mBAAmB,GAAG,IAAI,eAAe,CAAoB,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;KACxF;IAED,+CAAgB,GAAhB;QACI,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,CAAC;KAClD;IAED,wCAAS,GAAT,UAAU,KAAwB;QAC9B,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACxC;IAED,2CAAY,GAAZ;QACI,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,EAAC,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAC,CAAC,CAAC;KACnE;IAED,yCAAU,GAAV;QACI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;KACrB;;gBA3BJ,UAAU;;;;+BAHX;;SAIa,oBAAoB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\n@Injectable()\nexport class ModalsManagerService {\n    modal: ModalManagerState;\n    modalManagerSubject:BehaviorSubject<ModalManagerState>;\n    constructor() {\n        this.modal = {\n            action: false,\n            component: null\n        };\n        this.modalManagerSubject = new BehaviorSubject<ModalManagerState>(this.modalState());\n    }\n\n    getModalListener(): Observable<ModalManagerState> {\n        return this.modalManagerSubject.asObservable();\n    }\n\n    showModal(state: ModalManagerState) {\n        state.action = true;\n        this.modalManagerSubject.next(state);\n    }\n\n    destroyModal() {\n        this.modalManagerSubject.next({action: false, component: null});\n    }\n\n    modalState() {\n        return this.modal;\n    }\n}\n\n\nexport interface ModalManagerState{\n    action?: boolean; // true means create modal, false means destroy modal\n    payload?: any;\n    component: any;\n    callback?: any;\n    options?:any\n}\n\n"]}